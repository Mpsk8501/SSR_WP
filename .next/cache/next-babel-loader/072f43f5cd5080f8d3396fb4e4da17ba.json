{"ast":null,"code":"var _jsxFileName = \"H:\\\\forIT\\\\SSR_WP\\\\pages\\\\JobOpenings\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MainLayout } from '../../Layout/MainLayout';\nimport JobOpeningsComponent from '../../components/JobOpeningsComponent/JobOpeningsComponent';\nimport { fetchVacations } from '../../Store/actions/vacationAction';\nimport Loader from '../../components/Loader/Loader';\n\nconst JobOpenings = ({\n  vacations: serverVacations\n}) => {\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.vacations.loading);\n  const vacationsRedux = useSelector(state => state.vacations.vacations);\n  useEffect(() => {\n    if (serverVacations) {\n      return;\n    }\n\n    if (vacationsRedux) {\n      return;\n    }\n\n    dispatch(fetchVacations());\n  }, []);\n  return __jsx(MainLayout, {\n    title: 'Вакансии',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: 'flexWrapper',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, loading || !serverVacations && !vacationsRedux ? __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }) : __jsx(JobOpeningsComponent, {\n    vacations: serverVacations || vacationsRedux,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  })));\n};\n\nexport default JobOpenings;\n\nJobOpenings.getInitialProps = async ({\n  req\n}) => {\n  if (!req) {\n    return {\n      vacations: null\n    };\n  }\n\n  const response = await fetch('http://wp-test//wp-json/wp/v2/jobopenings');\n  const responseData = await response.json();\n  const vacations = [];\n  responseData.forEach(postData => {\n    const vacation = {\n      id: postData.id,\n      date: postData.date,\n      title: postData.title.rendered,\n      type: postData.type,\n      author: postData.author,\n      except: postData.except,\n      content: postData.content.rendered\n    };\n    vacations.push(vacation);\n  });\n  return {\n    vacations\n  };\n};","map":{"version":3,"sources":["H:/forIT/SSR_WP/pages/JobOpenings/index.js"],"names":["React","useEffect","useState","useDispatch","useSelector","MainLayout","JobOpeningsComponent","fetchVacations","Loader","JobOpenings","vacations","serverVacations","dispatch","loading","state","vacationsRedux","getInitialProps","req","response","fetch","responseData","json","forEach","postData","vacation","id","date","title","rendered","type","author","except","content","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAOC,oBAAP,MAAiC,4DAAjC;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAGC;AAAb,CAAD,KAAmC;AACrD,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,OAAO,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACJ,SAAN,CAAgBG,OAA1B,CAA3B;AACA,QAAME,cAAc,GAAGX,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACJ,SAAN,CAAgBA,SAA1B,CAAlC;AAGAT,EAAAA,SAAS,CAAC,MAAK;AACb,QAAGU,eAAH,EAAoB;AAClB;AACD;;AACD,QAAGI,cAAH,EAAkB;AAChB;AACD;;AACDH,IAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AAGD,GAVQ,EAUP,EAVO,CAAT;AAcA,SACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAE,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIM,OAAO,IAAI,CAACF,eAAD,IAAoB,CAACI,cAAhC,GACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAEI,MAAC,oBAAD;AACE,IAAA,SAAS,EAAEJ,eAAe,IAAII,cADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,CADF,CADF;AAcD,CAlCD;;AAoCA,eAAeN,WAAf;;AACAA,WAAW,CAACO,eAAZ,GAA8B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AAC/C,MAAI,CAACA,GAAL,EAAU;AACR,WAAO;AACLP,MAAAA,SAAS,EAAE;AADN,KAAP;AAGD;;AACD,QAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAAD,CAA5B;AACA,QAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACA,QAAMX,SAAS,GAAG,EAAlB;AACAU,EAAAA,YAAY,CAACE,OAAb,CAAqBC,QAAQ,IAAI;AAC/B,UAAMC,QAAQ,GAAG;AACfC,MAAAA,EAAE,EAAEF,QAAQ,CAACE,EADE;AAEfC,MAAAA,IAAI,EAAEH,QAAQ,CAACG,IAFA;AAGfC,MAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,CAAeC,QAHP;AAIfC,MAAAA,IAAI,EAAEN,QAAQ,CAACM,IAJA;AAKfC,MAAAA,MAAM,EAAEP,QAAQ,CAACO,MALF;AAMfC,MAAAA,MAAM,EAAER,QAAQ,CAACQ,MANF;AAOfC,MAAAA,OAAO,EAAET,QAAQ,CAACS,OAAT,CAAiBJ;AAPX,KAAjB;AASAlB,IAAAA,SAAS,CAACuB,IAAV,CAAeT,QAAf;AACD,GAXD;AAYA,SAAO;AACLd,IAAAA;AADK,GAAP;AAGD,CAxBD","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { MainLayout } from '../../Layout/MainLayout'\r\nimport JobOpeningsComponent from '../../components/JobOpeningsComponent/JobOpeningsComponent'\r\nimport { fetchVacations } from '../../Store/actions/vacationAction'\r\nimport Loader from '../../components/Loader/Loader'\r\n\r\nconst JobOpenings = ({vacations : serverVacations}) => {\r\n  const dispatch = useDispatch()\r\n  const loading = useSelector(state => state.vacations.loading)\r\n  const vacationsRedux = useSelector(state => state.vacations.vacations)\r\n\r\n\r\n  useEffect(() =>{\r\n    if(serverVacations) {\r\n      return\r\n    }\r\n    if(vacationsRedux){\r\n      return\r\n    }\r\n    dispatch(fetchVacations())\r\n\r\n\r\n  },[])\r\n\r\n\r\n\r\n  return (\r\n    <MainLayout title={'Вакансии'}>\r\n      <div className={'flexWrapper'}>\r\n        {\r\n          loading || !serverVacations && !vacationsRedux\r\n            ? <Loader/>\r\n            : <JobOpeningsComponent\r\n                vacations={serverVacations || vacationsRedux}\r\n              />\r\n        }\r\n      </div>\r\n    </MainLayout>\r\n\r\n  )\r\n}\r\n\r\nexport default JobOpenings\r\nJobOpenings.getInitialProps = async ({ req }) => {\r\n  if (!req) {\r\n    return {\r\n      vacations: null\r\n    }\r\n  }\r\n  const response = await fetch('http://wp-test//wp-json/wp/v2/jobopenings')\r\n  const responseData = await response.json()\r\n  const vacations = []\r\n  responseData.forEach(postData => {\r\n    const vacation = {\r\n      id: postData.id,\r\n      date: postData.date,\r\n      title: postData.title.rendered,\r\n      type: postData.type,\r\n      author: postData.author,\r\n      except: postData.except,\r\n      content: postData.content.rendered\r\n    }\r\n    vacations.push(vacation)\r\n  })\r\n  return {\r\n    vacations\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}