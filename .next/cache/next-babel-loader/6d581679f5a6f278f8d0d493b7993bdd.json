{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport delay from './delay';\n\nfunction compare(field, order) {\n  var len = arguments.length;\n\n  if (len === 0) {\n    return function (a, b) {\n      return a < b && -1 || a > b && 1 || 0;\n    };\n  }\n\n  if (len === 1) {\n    switch (typeof field) {\n      case 'number':\n        return field < 0 ? function (a, b) {\n          return a < b && 1 || a > b && -1 || 0;\n        } : function (a, b) {\n          return a < b && -1 || a > b && 1 || 0;\n        };\n\n      case 'string':\n        return function (a, b) {\n          return a[field] < b[field] && -1 || a[field] > b[field] && 1 || 0;\n        };\n    }\n  }\n\n  if (len === 2 && typeof order === 'number') {\n    return order < 0 ? function (a, b) {\n      return a[field] < b[field] && 1 || a[field] > b[field] && -1 || 0;\n    } : function (a, b) {\n      return a[field] < b[field] && -1 || a[field] > b[field] && 1 || 0;\n    };\n  }\n\n  var fields, orders;\n\n  if (typeof field === 'object') {\n    fields = Object.getOwnPropertyNames(field);\n    orders = fields.map(function (key) {\n      return field[key];\n    });\n    len = fields.length;\n  } else {\n    fields = new Array(len);\n    orders = new Array(len);\n\n    for (var i = len; i--;) {\n      fields[i] = arguments[i];\n      orders[i] = 1;\n    }\n  }\n\n  return function (a, b) {\n    for (var _i = 0; _i < len; _i++) {\n      if (a[fields[_i]] < b[fields[_i]]) return orders[_i];\n      if (a[fields[_i]] > b[fields[_i]]) return -orders[_i];\n    }\n\n    return 0;\n  };\n}\n\nvar arrSort = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(arr) {\n    var key,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            key = _args.length > 1 && _args[1] !== undefined ? _args[1] : null;\n            _context.next = 3;\n            return delay(100);\n\n          case 3:\n            return _context.abrupt(\"return\", arr.sort(function (a, b) {\n              return a[key] - b[key];\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function arrSort(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default arrSort;","map":{"version":3,"sources":["H:/forIT/SSR_WP/helpers/arrSort.js"],"names":["delay","compare","field","order","len","arguments","length","a","b","fields","orders","Object","getOwnPropertyNames","map","key","Array","i","arrSort","arr","sort"],"mappings":"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","sourcesContent":["import delay from './delay'\r\n\r\nfunction compare(field, order) {\r\n   let len = arguments.length;\r\n   if(len === 0) {\r\n      return (a, b) => (a < b && -1) || (a > b && 1) || 0;\r\n   }\r\n   if(len === 1) {\r\n      switch(typeof field) {\r\n         case 'number':\r\n            return field < 0 ?\r\n                ((a, b) => (a < b && 1) || (a > b && -1) || 0) :\r\n                ((a, b) => (a < b && -1) || (a > b && 1) || 0);\r\n         case 'string':\r\n            return (a, b) => (a[field] < b[field] && -1) || (a[field] > b[field] && 1) || 0;\r\n      }\r\n   }\r\n   if(len === 2 && typeof order === 'number') {\r\n      return order < 0 ?\r\n          ((a, b) => (a[field] < b[field] && 1) || (a[field] > b[field] && -1) || 0) :\r\n          ((a, b) => (a[field] < b[field] && -1) || (a[field] > b[field] && 1) || 0);\r\n   }\r\n   let fields, orders;\r\n   if(typeof field === 'object') {\r\n      fields = Object.getOwnPropertyNames(field);\r\n      orders = fields.map(key => field[key]);\r\n      len = fields.length;\r\n   } else {\r\n      fields = new Array(len);\r\n      orders = new Array(len);\r\n      for(let i = len; i--;) {\r\n         fields[i] = arguments[i];\r\n         orders[i] = 1;\r\n      }\r\n   }\r\n   return (a, b) => {\r\n      for(let i = 0; i < len; i++) {\r\n         if(a[fields[i]] < b[fields[i]]) return orders[i];\r\n         if(a[fields[i]] > b[fields[i]]) return -orders[i];\r\n      }\r\n      return 0;\r\n   };\r\n}\r\n\r\n\r\n\r\nconst arrSort = async (arr,key=null) => {\r\n   await delay(100)\r\n   return arr.sort((a,b) => a[key] - b[key])\r\n\r\n}\r\n\r\nexport default arrSort"]},"metadata":{},"sourceType":"module"}