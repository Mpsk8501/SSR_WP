{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport delay from './delay';\n\nvar arrSort = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(arr) {\n    var key,\n        type,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            key = _args.length > 1 && _args[1] !== undefined ? _args[1] : null;\n            type = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;\n            _context.next = 4;\n            return delay(100);\n\n          case 4:\n            if (!(type === 'num')) {\n              _context.next = 9;\n              break;\n            }\n\n            console.log('arrSortDelay');\n            return _context.abrupt(\"return\", arr.sort(function (a, b) {\n              return a[key] - b[key];\n            }));\n\n          case 9:\n            return _context.abrupt(\"return\", arr);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function arrSort(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default arrSort;","map":{"version":3,"sources":["H:/forIT/SSR_WP/helpers/arrSort.js"],"names":["delay","arrSort","arr","key","type","console","log","sort","a","b"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,IAAMC,OAAO;AAAA,sEAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAWC,YAAAA,GAAX,2DAAe,IAAf;AAAoBC,YAAAA,IAApB,2DAAyB,IAAzB;AAAA;AAAA,mBAEPJ,KAAK,CAAC,GAAD,CAFE;;AAAA;AAAA,kBAGTI,IAAI,KAAK,KAHA;AAAA;AAAA;AAAA;;AAIVC,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAJU,6CAKHJ,GAAG,CAACK,IAAJ,CAAS,UAACC,CAAD,EAAGC,CAAH;AAAA,qBAASD,CAAC,CAACL,GAAD,CAAD,GAASM,CAAC,CAACN,GAAD,CAAnB;AAAA,aAAT,CALG;;AAAA;AAAA,6CAOHD,GAPG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPD,OAAO;AAAA;AAAA;AAAA,GAAb;;AAWA,eAAeA,OAAf","sourcesContent":["import delay from './delay'\r\n\r\nconst arrSort = async (arr,key=null,type=null) => {\r\n\r\n   await delay(100)\r\n   if (type === 'num') {\r\n      console.log('arrSortDelay')\r\n      return arr.sort((a,b) => a[key] - b[key])\r\n   }else {\r\n      return arr\r\n   }\r\n}\r\n\r\nexport default arrSort"]},"metadata":{},"sourceType":"module"}