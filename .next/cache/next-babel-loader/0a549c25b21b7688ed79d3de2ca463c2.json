{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebStormProjects\\\\SSR_WP\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport '../index.scss';\nimport { combineReducers, applyMiddleware } from 'redux';\nimport { appWithRedux } from 'next-redux';\nimport rootReducer from '../Store/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst MyApp = function ({\n  Component,\n  pageProps\n}) {\n  return __jsx(React.Fragment, null, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default appWithRedux(rootReducer, applyMiddleware(thunk));","map":{"version":3,"sources":["C:/WebStormProjects/SSR_WP/pages/_app.js"],"names":["combineReducers","applyMiddleware","appWithRedux","rootReducer","thunk","MyApp","Component","pageProps"],"mappings":";;;;;;AAAA,OAAO,eAAP;AACA,SAASA,eAAT,EAA0BC,eAA1B,QAAiD,OAAjD;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,KAAK,GAAG,UAAS;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAT,EAAmC;AAC/C,SACE,4BACE,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD,CAND;;AAQA,eAAeL,YAAY,CAACC,WAAD,EAAcF,eAAe,CAACG,KAAD,CAA7B,CAA3B","sourcesContent":["import '../index.scss'\r\nimport { combineReducers, applyMiddleware } from 'redux'\r\nimport { appWithRedux } from 'next-redux'\r\nimport rootReducer from '../Store/rootReducer'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst MyApp = function({ Component, pageProps }) {\r\n  return (\r\n    <>\r\n      <Component {...pageProps}/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default appWithRedux(rootReducer, applyMiddleware(thunk))"]},"metadata":{},"sourceType":"module"}